<Window x:Name="window" x:Class="Microsoft.Samples.Kinect.Slideshow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Slide Show" Height="600" Width="800" >

    <Window.Resources>
        <SolidColorBrush x:Key="MediumGreyBrush" Color="#ff6e6e6e"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Storyboard x:Key="LeftAnimate">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="previous">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="next">
            	<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="current">
                <EasingThicknessKeyFrame KeyTime="0" Value="2000,0,-2000,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RightAnimate">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="previous">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="next">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="current">
                <EasingThicknessKeyFrame KeyTime="0" Value="-2000,0,2000,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TopAnimate">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="previous">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="next">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="current">
                <EasingThicknessKeyFrame KeyTime="0" Value="2000,0,-2000,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="BottomAnimate">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="previous">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="next">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="current">
                <EasingThicknessKeyFrame KeyTime="0" Value="2000,0,-2000,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TopPullDown">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RelatedItems">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="RelatedItems">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,-500,0,500"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.7" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TopPushUp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RelatedItems">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="RelatedItems">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,500,0,-500"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.7" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AnimateRelatedItem">
            <DoubleAnimation Storyboard.TargetName="relatedImageOverlay" Storyboard.TargetProperty="Height" From="20" To="180" Duration="0:0:2" />
            <DoubleAnimation Storyboard.TargetName="relatedImageOverlay" Storyboard.TargetProperty="Opacity" From="0" To="0.7" Duration="0:0:2" />
        </Storyboard>
        <Storyboard x:Key="AnimatePlayButton">
            <DoubleAnimation Storyboard.TargetName="playButtonOverlay" Storyboard.TargetProperty="Height" From="20" To="180" Duration="0:0:2" />
            <DoubleAnimation Storyboard.TargetName="playButtonOverlay" Storyboard.TargetProperty="Opacity" From="0" To="0.7" Duration="0:0:2" />
        </Storyboard>
        <Storyboard x:Key="RemoveRelatedItem">
            <DoubleAnimation Storyboard.TargetName="relatedImageOverlay" Storyboard.TargetProperty="Opacity" From="0.7" To="0" Duration="0:0:2" />
        </Storyboard>
        <Storyboard x:Key="RotateTopRect">
           <!-- <DoubleAnimation Storyboard.TargetName="rect1" Storyboard.TargetProperty="RotateTransform.Angle" To="-360" Duration="0:0:1" RepeatBehavior="Forever"/>-->
        </Storyboard>
        <Storyboard x:Key="RotateBottomRect" />
            <Style TargetType="{x:Type Image}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
    </Window.Resources>
    <Grid DataContext="{Binding ElementName=window}" > <!--Margin="10 0 10 0">-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" ></DockPanel>   <!--Margin="0 0 0 20"/>-->
        <Grid Grid.Row="1" Name="MainGrid">
            <Image x:Name="next" Source="{Binding NextPicture}" Opacity="0"/>
            <Image x:Name="previous" Source="{Binding PreviousPicture}" Opacity="0"/>
            <Image x:Name="current" Source="{Binding Picture}"/>
            <Image x:Name="parent" Source="{Binding ParentPicture}" Opacity="0"/>
            <!--<Image x:Name="RelatedItemsTab" Source="C:\\Pictures\\tab.PNG" Height="100" VerticalAlignment="Top" HorizontalAlignment="Right" />-->
            <Canvas x:Name="RelatedItems" Opacity="0" Height="200" VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Black">
                <Image x:Name="mainImage" Source="{Binding RelatedPicture1}" Canvas.Left="0" Width ="200" Height ="200"/>
                <Image x:Name="mainImage2" Source= "{Binding RelatedPicture2}" Canvas.Left="210" Width ="200" Height ="200"/>
                <Image x:Name="mainImage3" Source= "{Binding RelatedPicture3}" Canvas.Left="420" Width ="200" Height ="200"/>
                <Image x:Name="mainImage4" Source= "{Binding RelatedPicture4}" Canvas.Left="630" Width ="200" Height ="200"/>
                <Canvas x:Name="relatedImageOverlay" Canvas.Left="0" Width="200" Height="180" Background="Pink" Opacity="0" Margin="0 20 0 0"/>
            </Canvas>
            <Grid x:Name="VideoCanvas" Opacity="1" Background="Transparent" Height="{Binding ElementName=current, Path=ActualHeight}" Width="{Binding ElementName=current, Path=ActualWidth}">
                <MediaElement x:Name="myVideoX" LoadedBehavior="Manual" VerticalAlignment="Center" HorizontalAlignment="Center" UnloadedBehavior="Stop" Stretch="Uniform" Opacity="0"/>
                <Rectangle x:Name="playButtonOverlay" VerticalAlignment="Center" HorizontalAlignment="Center" Width="260" Height="260" Fill="Black" Opacity="0" />
                <Image x:Name="playButton" Source="{Binding PlayButton}" Canvas.Left="0" Canvas.Top="0" Width="300" Height="300" Opacity="0"/>
            </Grid>

            <Canvas x:Name="HotCorners">
                <!-- Height="{Binding ElementName=current, Path=ActualHeight}" Width="{Binding ElementName=current, Path=ActualWidth}"-->
                <!-- Lower Left-->
                <Image x:Name="HotCorner_LowerLeft" Source="C:\\Pictures\\circle.png" Height="400" Width="400" Canvas.Bottom="-200" Canvas.Left="-200" Opacity="0" />
                <Image x:Name="Loader_LowerLeft" Source="C:\\Pictures\\lower_left.png" Height="400" Width="400" Canvas.Bottom="-200" Canvas.Left="-200" RenderTransformOrigin="0.5, 0.5" Opacity="1">
                <!-- CURRENTLY HIDDEN -->
                <Image.RenderTransform>
                    <RotateTransform/>
                </Image.RenderTransform>
                </Image>
                <!-- Upper Right-->
                <Image x:Name="HotCorner_UpperRight" Source="C:\\Pictures\\circle.png" Height="400" Width="400" Canvas.Top="-200" Canvas.Right="-200" Opacity="0" />
                <Image x:Name="Loader_UpperRight" Source="C:\\Pictures\\upper_right.png"  Height="400" Width="400" Canvas.Top="-200" Canvas.Right="-200" RenderTransformOrigin="0.5, 0.5" Opacity="1">
                    <Image.RenderTransform>
                        <RotateTransform/>
                    </Image.RenderTransform>
                </Image>
                    <!-- CURRENTLY HIDDEN -->

                <Rectangle x:Name="rect1" Height="100" Width="200" Canvas.Left="300" Canvas.Top="200" RenderTransformOrigin="0.5, 0.5" Fill="Black" Opacity="0">
                    <Rectangle.RenderTransform>
                        <RotateTransform/>
                    </Rectangle.RenderTransform>  
                </Rectangle>


            </Canvas>
            <Canvas x:Name="StickMen" Width="200" Height="150" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
            <TextBlock Text="No Kinect available" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="24" Foreground="Red" TextWrapping="Wrap" FontWeight="Bold" TextAlignment="Center" Visibility="{Binding IsDisconnected, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBlock Text="{Binding DisconnectedReason}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Foreground="Red" TextWrapping="Wrap" FontWeight="Bold" TextAlignment="Center" />
            <Canvas x:Name="annotateCanvas">
               
                <Canvas Canvas.Left="0" Canvas.Top="0" Background="Transparent"  Height="735" Name="canvas" Width="850"/>
            </Canvas>
            <Canvas x:Name="PointerCanvas">
                <Ellipse Canvas.Top="500" Canvas.Left="600" Fill="Green" Stroke="White" StrokeThickness="5" Width="25" Height="25" Name="RightHandPointer"/>
            </Canvas>
        </Grid>
        <StatusBar Grid.Row="3" HorizontalAlignment="Stretch" Name="statusBar" VerticalAlignment="Bottom" Background="White" Foreground="{StaticResource MediumGreyBrush}">
            <StatusBarItem Padding="0 0 0 10"/>
        </StatusBar>
    </Grid>
</Window>
